apply plugin: 'com.android.application'

boolean isInJeknins() {
    Map<String, String> map =  System.getenv()

    if(map == null) {
        return false
    }
    String str = map.get("Path")
    if(str != null) {
        //it's windows
        return false;
    }
    else{
        str = ""
        Iterator it = map.iterator();
        while(it.hasNext()) {
            str += it.next();
        }
        if(str.contains("jenkins")){
            return true
        }else{
            return false;
        }
    }
    return false
}
def getJenkinsBuild() {
    boolean  flag = isInJeknins();
    if(flag){
        ext.env = System.getenv()
        ext.buildNumber = env.BUILD_NUMBER?.toInteger()
        return "$buildNumber"
    }else{
        return "0"
    }

}

// 获取当前系统时间
def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

// 获取程序名称
def getProductName(){
    return "gradlesample"
}

// 读取版本号
def getVersionCode() {
    def versionFile = file('version.properties')
    if (versionFile.canRead()){
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionFile))
        def versionCode = versionProps['VERSION_CODE'].toInteger()
        def runTasks = gradle.startParameter.taskNames
        if ('assembleRelease' in runTasks) {
            versionProps['VERSION_CODE'] = (++versionCode).toString()
            versionProps.store(versionFile.newWriter(), null)
        }
        return versionCode
    } else {
        throw new GradleException("Could not find version.properties!")
    }
}
android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.xinran.studyindanke"
        minSdkVersion 22
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {
        }
    }
    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.google.android.gms:play-services-vision:8.1.0'
    compile 'com.android.support:design:25.3.1'//引入Material Design支持包 使用其相关布局http://blog.csdn.net/mchenys/article/details/51534722
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:cardview-v7:25.3.1'
    // https://github.com/ReactiveX/RxAndroid
    compile 'io.reactivex.rxjava2:rxjava:2.1.3'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'

    // https://github.com/square/retrofit
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile ('com.squareup.retrofit2:converter-gson:2.1.0'){
        // 使用了自定义的lib-gson，所以这里去掉retrofit自带的
        // 之所以用自定义的是因为Php同一字段不为空时返{}，为空时返[]，gson默认解析会崩
        // 关于改gson源码解决解析问题，也可参考https://github.com/1004145468/IKGson
        exclude group: 'com.google.code.gson'
    }
    compile 'com.squareup.retrofit2:converter-scalars:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    // https://github.com/square/okhttp
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.0'

    // https://github.com/trello/RxLifecycle
    compile 'com.trello.rxlifecycle2:rxlifecycle:2.1.0'
    // If you want pre-written Activities and Fragments you can subclass as providers
    compile 'com.trello.rxlifecycle2:rxlifecycle-components:2.1.0'

    // https://github.com/tbruyelle/RxPermissions
    compile 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.1@aar'
    compile project(':nicedialog')

 //https://github.com/Kyson/AndroidGodEye/ 在PC查看手机性能
//    apply plugin: 'announce'
//    implementation 'cn.hikyson.godeye:godeye-core:VERSION_NAME'
//    debugImplementation 'cn.hikyson.godeye:godeye-monitor:VERSION_NAME'
//    releaseImplementation 'cn.hikyson.godeye:godeye-monitor-no-op:VERSION_NAME'
//    implementation 'cn.hikyson.godeye:godeye-toolbox:VERSION_NAME'

}
